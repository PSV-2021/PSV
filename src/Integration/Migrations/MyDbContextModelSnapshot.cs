// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.DataBaseContext;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Integration_API.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Integration.Model.Drugstore", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drugstores");

                    b.HasData(
                        new
                        {
                            Id = "aaa",
                            Name = "Apoteka 1",
                            Url = "http://apoteka1.rs"
                        },
                        new
                        {
                            Id = "bbb",
                            Name = "Apoteka 2",
                            Url = "http://apoteka2.rs"
                        },
                        new
                        {
                            Id = "ccc",
                            Name = "Apoteka 3",
                            Url = "http://apoteka3.rs"
                        });
                });

            modelBuilder.Entity("Integration.Model.DrugstoreFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("DrugstoreToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("RecievedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("DrugstoreFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Nije mi se svidela usluga",
                            DrugstoreToken = "tokentokentoken123",
                            RecievedTime = new DateTime(2021, 11, 1, 15, 0, 12, 762, DateTimeKind.Local).AddTicks(5846),
                            Response = "Nemoj da lazes!",
                            SentTime = new DateTime(2021, 11, 1, 15, 0, 12, 768, DateTimeKind.Local).AddTicks(7287)
                        },
                        new
                        {
                            Id = 2,
                            Content = "Svidjela usluga",
                            DrugstoreToken = "tokentokentoken456",
                            RecievedTime = new DateTime(2021, 11, 1, 15, 0, 12, 768, DateTimeKind.Local).AddTicks(8195),
                            Response = "Nemoj da lazes!",
                            SentTime = new DateTime(2021, 11, 1, 15, 0, 12, 768, DateTimeKind.Local).AddTicks(8249)
                        },
                        new
                        {
                            Id = 3,
                            Content = "Nije mi se svidela usluga",
                            DrugstoreToken = "tokentokentoken789",
                            RecievedTime = new DateTime(2021, 11, 1, 15, 0, 12, 768, DateTimeKind.Local).AddTicks(8274),
                            Response = "Nemoj da lazes!",
                            SentTime = new DateTime(2021, 11, 1, 15, 0, 12, 768, DateTimeKind.Local).AddTicks(8281)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
